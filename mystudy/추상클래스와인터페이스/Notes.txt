무작위 작성 , 이후 정리


interface를 상속(?)받은 이후 interface의 추상메서드를 오버라이딩할때 public 접근제어자가 필요하다.
추상클래스를 상속받아 추상클래스의 추상메서드를 오버라이딩 할때는 private를 제외하고 가능하다.


클래스는 선언시 abstract 키워드를 사용하여 선언하며 추상메서드나 일반메서드가 하나이상 존재하는 경우이다.
(인터페이스가 아닌 클래스로 선언시 추상 메서드가 없어도 추상 클래스가 될 수 있지만, 추상 메서드가 하나라도 존재하면 추상 클래스가 되어야한다.)

인터페이스는 모든 메서드가 추상메서드인 경우이다. 
(그렇기 때문에 메서드 선언 시 abstract 생략이 가능하다. 또한, 인터페이스는 필드(변수) 선언시 반드시 static final가 붙은 상수만을 입력가능한데 이 또한 생략가능하다.)

추상클래스는 추상클래스를 상속받아 기능을 이용하고, 확장시키는데 있다.
인터페이스는 함수의 구현을 강제하는 것이다.


인터페이스는 생성자가 존재하지 않는다.
인터페이스는 전부 추상메서드로 구성되어있어 명시하지 않아도 추상메서드로 설정된다.
추상 메서드는 구현부가 존재하지 않다. (Overriding되는 부분에서 구현해야함) 
추상 메서드가 존재하는 클래스 또는 인터페이스를 상속받았다면, 무조건 추상 메서드는 오버라이딩 해야한다.
즉, 인터페이스는 전부 추상메서드이므로 인터페이스를 상속받으면 해당 인터페이스에 있는 모든 메서드를 오버라이드해야한다.


인터페이스에서 선언하는 메서드가 아닌 멤버 변수는 반드시 초기화해줘야한다.
인터페이스에서 선언되는 멤버 변수는 무조건 상수이기 때문이다. ( static final 변수 )
또한, 메서드와 동일하게 인터페이스에 입력되는 멤버변수는 무조건 상수여야만 하기 때문에 static final 키워드는 생략 가능하다.
상수의 변수명은 대문자로 입력해주는 것이 일반적인 약속이다. 지켜주도록 하자.


추상클래스의 객체를 직접 호출할 수 없다. (하위클래스로부터 가능 -> 자식클래스로 부터 가나ㅡㅇ)








